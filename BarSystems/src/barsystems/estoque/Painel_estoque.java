
package barsystems.estoque;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Painel_estoque extends javax.swing.JPanel {
    
     public void refreshList(){
        Class_estoque carrega = new Class_estoque();
        DefaultListModel lista = carrega.carregaLista();
        lista_centros.setModel(lista);
    }
     
     public void refreshTransf(String centro){
         Class_estoque carrega = new Class_estoque();
        DefaultListModel lista = carrega.carregaLista();
        lista.removeElement(centro);
        lista_centro2.setModel(lista);
     }

    
    public void refreshTransferencia(){
        int linha;
        linha = tabela_estoque.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tabela_estoque.getModel();
        
        produto.setText((String) modelo.getValueAt(linha,0));
        centro_estoque.setText((String)lista_centros.getSelectedValue());
        radio_button.add(caixas);
        radio_button.add(unidades);
        quant_unidade.setText((String) modelo.getValueAt(linha,1));
        refreshTransf((String)lista_centros.getSelectedValue());
    }
    
    public Painel_estoque() {
        initComponents();
    }
    
    protected int qntd_por_caixa;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subir_produto = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        centro_estoque = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        quant_unidade = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        quantidade = new javax.swing.JTextField();
        caixas = new javax.swing.JRadioButton();
        unidades = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista_centro2 = new javax.swing.JList();
        produto = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        radio_button = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista_centros = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_estoque = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lbl_produto = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbl_fornecedor = new javax.swing.JLabel();
        lbl_data = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        subir_produto.setModal(true);
        subir_produto.getContentPane().setLayout(null);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Este produto esta no(a): ");
        subir_produto.getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 50, 158, 30);

        centro_estoque.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        centro_estoque.setForeground(new java.awt.Color(0, 0, 204));
        centro_estoque.setText("centroestoque");
        subir_produto.getContentPane().add(centro_estoque);
        centro_estoque.setBounds(180, 50, 115, 30);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Quantidade em unidades: ");
        subir_produto.getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 90, 170, 20);

        quant_unidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        quant_unidade.setText("unidades");
        subir_produto.getContentPane().add(quant_unidade);
        quant_unidade.setBounds(180, 80, 60, 40);

        jLabel18.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel18.setText("Transferir: ");
        subir_produto.getContentPane().add(jLabel18);
        jLabel18.setBounds(20, 150, 80, 17);
        subir_produto.getContentPane().add(quantidade);
        quantidade.setBounds(90, 140, 60, 30);

        caixas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        caixas.setText("caixas");
        caixas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caixasMouseClicked(evt);
            }
        });
        caixas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixasActionPerformed(evt);
            }
        });
        subir_produto.getContentPane().add(caixas);
        caixas.setBounds(160, 140, 65, 25);

        unidades.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unidades.setText("unidades");
        subir_produto.getContentPane().add(unidades);
        unidades.setBounds(160, 170, 83, 25);

        lista_centro2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(lista_centro2);

        subir_produto.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(260, 140, 160, 130);

        produto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        subir_produto.getContentPane().add(produto);
        produto.setBounds(10, 20, 130, 30);

        jButton2.setText("Transferir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        subir_produto.getContentPane().add(jButton2);
        jButton2.setBounds(260, 280, 160, 60);

        setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Centros de estoque");
        add(jLabel1);
        jLabel1.setBounds(20, 90, 170, 20);

        lista_centros.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lista_centros.setSelectionBackground(new java.awt.Color(204, 255, 255));
        lista_centros.setSelectionForeground(new java.awt.Color(0, 0, 0));
        lista_centros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lista_centrosMouseClicked(evt);
            }
        });
        lista_centros.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_centrosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista_centros);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 110, 170, 170);

        tabela_estoque.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabela_estoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Unidades", "Valor Compra", "Valor Venda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_estoque.setRowHeight(25);
        tabela_estoque.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tabela_estoque.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tabela_estoque.getTableHeader().setReorderingAllowed(false);
        tabela_estoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_estoqueMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabela_estoque);
        if (tabela_estoque.getColumnModel().getColumnCount() > 0) {
            tabela_estoque.getColumnModel().getColumn(0).setPreferredWidth(300);
            tabela_estoque.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabela_estoque.getColumnModel().getColumn(2).setPreferredWidth(150);
            tabela_estoque.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(200, 110, 760, 210);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Produtos em centro de estoque");
        add(jLabel3);
        jLabel3.setBounds(200, 90, 210, 20);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barsystems/imagens/man251.png"))); // NOI18N
        jButton1.setText("Transferir produto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(20, 290, 170, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Detalhes do produto:");
        add(jLabel4);
        jLabel4.setBounds(200, 330, 140, 20);

        lbl_produto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        add(lbl_produto);
        lbl_produto.setBounds(340, 330, 340, 20);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("Ultima compra:");
        add(jLabel10);
        jLabel10.setBounds(250, 360, 90, 15);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("  Fornecedor: ");
        add(jLabel12);
        jLabel12.setBounds(260, 390, 80, 15);

        lbl_fornecedor.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_fornecedor.setText("      ");
        add(lbl_fornecedor);
        lbl_fornecedor.setBounds(340, 390, 340, 15);

        lbl_data.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_data.setText("    ");
        add(lbl_data);
        lbl_data.setBounds(340, 360, 340, 15);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barsystems/imagens/cargo3 (1).png"))); // NOI18N
        jLabel5.setText("Manutenção do cadastro e gerenciamento de centros de estoque");
        add(jLabel5);
        jLabel5.setBounds(0, 30, 980, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void lista_centrosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_centrosValueChanged
       
        Class_estoque resolve = new Class_estoque();
       String codigo = resolve.getCodigo((String) lista_centros.getSelectedValue());
       resolve.carregaTabela(codigo, (DefaultTableModel) tabela_estoque.getModel());
       
    }//GEN-LAST:event_lista_centrosValueChanged

    private void caixasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                
        if( tabela_estoque.getSelectedRowCount() == 0 ){
            JOptionPane.showMessageDialog(null,"Selecione um produto na tabela ao lado");
        }else{
            refreshTransferencia();
            subir_produto.setBounds(0, 0, 450, 430);
            subir_produto.setLocationRelativeTo(null);
            subir_produto.setVisible(true);
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabela_estoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_estoqueMouseClicked
        
        int linha;
        linha = tabela_estoque.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tabela_estoque.getModel();
        Class_estoque detalhes = new Class_estoque();
        detalhes.carregaDetalhes((String) modelo.getValueAt(linha,0));
        lbl_produto.setText((String) modelo.getValueAt(linha,0));
        lbl_data.setText(detalhes.getData().toString());
        lbl_fornecedor.setText(detalhes.getFornecedor());
        
    }//GEN-LAST:event_tabela_estoqueMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
       boolean c1 = true, c2 = true, c3 = true;
       Class_estoque transfere  = new Class_estoque();
       if(quantidade.getText().equals("")){
           JOptionPane.showMessageDialog(null, "Digite uma quantidade");
           c1 = false;
       }
       if(caixas.isSelected() == false && unidades.isSelected() == false){
           JOptionPane.showMessageDialog(null, "Selecione quantidade ou unidade");
           c2 = false;
       }           
       if(lista_centro2.isSelectionEmpty()){
           JOptionPane.showMessageDialog(null, "Selecione um centro de estoque para enviar");
           c3 = false;
       } 
       if(c1 && c2 && c3){
                if(caixas.isSelected()){
                    if( !(qntd_por_caixa*Integer.parseInt(quantidade.getText()) > Integer.parseInt(quant_unidade.getText())) ){
                 transfere.transferencia((String)lista_centro2.getSelectedValue(), 
                 produto.getText(), 
                 Integer.parseInt(quantidade.getText()), 
                 "Caixa", 
                 qntd_por_caixa,
                 centro_estoque.getText());
                    }else
                        JOptionPane.showMessageDialog(null, "Quantidade maior que o estoque");
                } else if(unidades.isSelected()){
                    if( !(Integer.parseInt(quantidade.getText()) > Integer.parseInt(quant_unidade.getText())) ){
                     transfere.transferencia((String)lista_centro2.getSelectedValue(), 
                     produto.getText(), 
                     Integer.parseInt(quantidade.getText()), 
                     "Unidade", 
                     qntd_por_caixa,
                     centro_estoque.getText());
                }else
                        JOptionPane.showMessageDialog(null, "Quantidade maior que o estoque");
            }
       }

       String codigo = transfere.getCodigo((String) lista_centros.getSelectedValue());
       transfere.carregaTabela(codigo, (DefaultTableModel) tabela_estoque.getModel());
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void lista_centrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lista_centrosMouseClicked
        
        Class_estoque resolve = new Class_estoque();
        String codigo = resolve.getCodigo((String) lista_centros.getSelectedValue());
        resolve.carregaTabela(codigo, (DefaultTableModel) tabela_estoque.getModel());
        
    }//GEN-LAST:event_lista_centrosMouseClicked

    private void caixasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caixasMouseClicked
        String valor = JOptionPane.showInputDialog("Digite a quantidade por caixa");
        qntd_por_caixa = Integer.parseInt(valor);
        
    }//GEN-LAST:event_caixasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton caixas;
    private javax.swing.JLabel centro_estoque;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_data;
    private javax.swing.JLabel lbl_fornecedor;
    private javax.swing.JLabel lbl_produto;
    private javax.swing.JList lista_centro2;
    private javax.swing.JList lista_centros;
    private javax.swing.JLabel produto;
    private javax.swing.JLabel quant_unidade;
    private javax.swing.JTextField quantidade;
    private javax.swing.ButtonGroup radio_button;
    private javax.swing.JDialog subir_produto;
    private javax.swing.JTable tabela_estoque;
    private javax.swing.JRadioButton unidades;
    // End of variables declaration//GEN-END:variables
}
